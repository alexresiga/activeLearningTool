{
  "name": "annotaurus",
  "version": "1.0.0",
  "description": "",
  "main": "app.js",
  "author": "",
  "license": "",
  "dependencies": {
    "awesomplete": "^1.1.2",
    "babel-polyfill": "^6.26.0",
    "bootstrap": "^3.3.7",
    "bootstrap-datepicker": "^1.8.0",
    "common-tags": "^1.7.2",
    "deamdify": "^0.3.0",
    "font-awesome": "^4.7.0",
    "jquery": "^3.3.1",
    "jszip": "^3.1.4",
    "lodash": "^4.17.5",
    "moment": "^2.20.1",
    "noty": "^3.2.0-beta",
    "nouislider": "^11.1.0",
    "popper.js": "^1.14.3",
    "query-string": "^5.1.0"
  },
  "devDependencies": {
    "babel-core": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "babelify": "^8.0.0",
    "babel-jest": "^22.4.1",
    "browserify": "^14.5.0",
    "clean-css-cli": "^4.1.10",
    "colors-cli": "^1.0.13",
    "cpy-cli": "^1.0.1",
    "eslint": "^4.18.1",
    "handlebars": "^4.0.11",
    "hbsfy": "^2.8.1",
    "jest": "^22.4.2",
    "less": "^3.0.1",
    "mkdirp": "^0.5.1",
    "npm-run-all": "^4.1.1",
    "onchange": "^3.3.0",
    "rimraf": "^2.6.2",
    "tinyify": "^2.4.0",
    "watchify": "^3.10.0"
  },
  "scripts": {
    "test": "color --white \" no tests specified...\"",
    "preall": "npm run update-install && colors --white \" - \" --cyan \"Starting build process: Will clean, build, and copy to dist (../public/ui)\"",
    "postall": "colors --white \" - \" --cyan \"Build process finished\"",
    "all": "npm-run-all clean build dist",
    "preclean": "colors --white \" - \" --green \"Cleaning generated files\"",
    "preupdate-install": "echo \" - Installing/Updating NPM packages\"",
    "update-install": "npm install --no-optional && npm update",
    "clean": "npm-run-all --parallel clean:*",
    "clean:build": "rimraf build",
    "clean:dist": "rimraf ../public/ui/css/* ../public/ui/fonts/* ../public/ui/js/*",
    "prebuild": "colors --white \" - \" --green \"Bundling sources\"",
    "build": "mkdirp build && npm-run-all --parallel build:css build:fonts build:js",
    "prebuild:css": "colors --white \" - \" --green \"Bundling and minifying CSS files\"",
    "build:css": "mkdirp build/css && npm-run-all build:css:vendor build:css:app",
    "build:css:vendor": "mkdirp build/css/vendor && npm-run-all build:css:vendor:copy build:css:vendor:minify",
    "build:css:vendor:copy": "npm-run-all --parallel build:css:copy:*",
    "build:css:copy:bootstrap": "cpy node_modules/bootstrap/dist/css/bootstrap.min.css build/css/vendor",
    "build:css:copy:awesomplete": "cpy node_modules/awesomplete/awesomplete.css build/css/vendor",
    "build:css:copy:font-awesome": "cpy node_modules/font-awesome/css/font-awesome.min.css build/css/vendor",
    "build:css:copy:noty": "cpy node_modules/noty/lib/noty.css build/css/vendor",
    "build:css:copy:noty-bootstrap": "cpy node_modules/noty/lib/themes/bootstrap-v3.css build/css/vendor",
    "build:css:vendor:minify": "cleancss -o build/css/vendor.min.css build/css/vendor/*.css",
    "build:css:app": "npm-run-all build:css:app:minify",
    "build:css:app:minify": "cleancss -o build/css/app.min.css src/css/*.css",
    "prebuild:fonts": "colors --white \" - \" --green \"Collecting font files\"",
    "build:fonts": "mkdirp build/fonts && npm-run-all build:fonts:vendor:*",
    "build:fonts:vendor:font-awesome": "cpy \"node_modules/font-awesome/fonts/*\" build/fonts",
    "build:fonts:vendor:bootstrap": "cpy \"node_modules/bootstrap/fonts/*\" build/fonts",
    "prebuild:js": "colors --white \" - \" --green \"Bundling and minifying JS files\"",
    "build:js": "mkdirp build/js && npm-run-all --parallel build:js:vendor build:js:app build:js:login",
    "build:js:vendor": "mkdirp build/js/vendor && npm-run-all build:js:vendor:copy",
    "build:js:vendor:copy": "npm-run-all --parallel build:js:vendor:copy:*",
    "build:js:vendor:copy:bootstrap": "cpy node_modules/bootstrap/dist/js/bootstrap.min.js build/js/vendor",
    "build:js:app": "npm run build:js:app:browserify && npm run build:js:app:minify",
    "build:js:login": "npm run build:js:login:browserify && npm run build:js:login:minify",
    "build:js:app:browserify": "browserify -g [ babelify ] -t [ hbsfy ] src/js/app.js -o build/js/bundle.js",
    "build:js:app:minify": "uglifyjs build/js/bundle.js -o build/js/bundle.min.js",
    "build:js:login:browserify": "browserify -g [ babelify ] -t [ hbsfy ] src/js/login.js -o build/js/login.js",
    "build:js:login:minify": "uglifyjs build/js/login.js -o build/js/login.min.js",
    "predist": "colors --white \" - \" --green \"Copying built files to dist directory (../public/ui)\"",
    "dist": "npm-run-all --parallel dist:css dist:fonts dist:js dist:img",
    "dist:css": "mkdirp ../public/ui/css && npm-run-all --parallel dist:css:*",
    "dist:css:vendor": "cpy build/css/vendor.min.css ../public/ui/css/",
    "dist:css:app": "cpy build/css/app.min.css ../public/ui/css/",
    "dist:fonts": "mkdirp ../public/ui/css/fonts && cpy \"build/fonts/*\" ../public/ui/css/fonts/",
    "dist:js": "mkdirp ../public/ui/js && npm-run-all --parallel dist:js:*",
    "dist:js:vendor": "mkdirp ../public/ui/js/vendor && cpy build/js/vendor/* ../public/ui/js/vendor",
    "dist:js:app": "cpy build/js/bundle.min.js ../public/ui/js/",
    "dist:js:login": "cpy build/js/login.min.js ../public/ui/js/",
    "dist:img": "mkdirp ../public/ui/img && cpy \"src/img/*\" ../public/ui/img/",
    "watch": "npm-run-all --parallel watch:css watch:js",
    "prewatch:css": "colors --white \" - \" --cyan \"Watching for updates to app.css and Bootstrap .less files. (Minified)\"",
    "watch:css": "onchange \"src/css/*.css\" \"src/css/**/*.less\" -i -- npm-run-all watch:css:minify",
    "watch:css:minify": "cleancss -o ../public/ui/css/app.min.css src/css/*.css",
    "prewatch:js": "colors --white \" - \" --cyan \"Watching for updates to app.js. (Recompiled verbatim; run 'build' task for minification)\"",
    "watch:js": "npm-run-all --parallel watch:js:*",
    "watch:js:app": "watchify -t [ babelify ] -t [ hbsfy ] src/js/app.js -o ../public/ui/js/bundle.min.js -v --poll=50",
    "watch:js-no-babel": "npm-run-all --parallel watch:js-no-babel:*",
    "watch:js-no-babel:app": "watchify -t [ hbsfy ] src/js/app.js -o ../public/ui/js/bundle.min.js -v --poll=50"
  }
}
